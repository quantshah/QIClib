

namespace qic
{

  template<typename T1>
  inline 
  typename std::enable_if< std::is_arithmetic< pT<T1> >::value,
			   arma::Mat< eT<T1> > 
			   >::type absm(const T1& rho1)
  {
    const auto& rho  = as_Mat(rho1);

#ifndef QIC_LIB_NO_DEBUG
    if(rho.n_elem == 0)
      throw Exception("qic::absm", Exception::type::ZERO_SIZE);

    if(rho.n_rows != rho.n_cols)
      throw Exception("qic::absm", Exception::type::MATRIX_NOT_SQUARE);
#endif

    return sqrtm_sym((rho.t()*rho).eval());
  }

}
